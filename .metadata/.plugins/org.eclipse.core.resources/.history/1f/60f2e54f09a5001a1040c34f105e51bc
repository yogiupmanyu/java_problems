package design_patterns.behaviour_design_pattern;

class Editor {
	private Integer curX , curY ;
	private String text;
	private String selectionWidth;
	
	public void setSelectionWidth(String selectionWidth) {
		this.selectionWidth = selectionWidth;
	}
	
	public void setCursor(Integer curX,Integer curY) {
		this.curX = curX;
		this.curY = curY;
	}
	
	public void setText(String text) {
		this.text = text;
	}
	  // Saves the current state inside a memento.
	public Snapshot getMemento() {
		// Memento is an immutable object; that's why the
        // originator passes its state to the memento's
        // constructor parameters.

		return new Snapshot(this.curX, this.curY, this.selectionWidth, this.text);
	}
}

class Snapshot {
	
	private Integer curX , curY ;
	private String text;
	private String selectionWidth;
	
	
	public Snapshot(Integer curX,Integer curY,String selectionWidth,String text) {
		this.curX = curX;
		this.curY = curY;
		this.selectionWidth = selectionWidth;
		this.text = text;
	}
	
	
	
}

public class MementoDesignPattern {

}
