package leet_code.array_practice;

/**
 * Given a non-empty array of integers, return the third maximum number in this array.
	If it does not exist, return the maximum number. The time complexity must be in O(n).
	
	
 * */
public class ThirdMaximumNumber {

	 	public static int thirdMax(int[] nums) {
	 		int f = Integer.MIN_VALUE;
	 		int s = Integer.MIN_VALUE;
	 		int t = Integer.MIN_VALUE;
	 		boolean fB = false;
	 		boolean sB = false;
	 		boolean tB = false;
	 		
	 		for(int i=0; i<nums.length ; i++) {
	 			f = Math.max(nums[i], f);
	 		}
	 		
	 		for(int i=0; i<nums.length ; i++) {
	 			if( nums[i]!=f && s <= nums[i] ) {
	 				s = nums[i];
	 				sB = true;
	 			}
	 		}
	 		
	 		for(int i=0; i<nums.length ; i++) {
	 			if( nums[i]!=f && nums[i]!=s && t <= nums[i] ) {
	 				t = nums[i];
	 				tB = true;
	 			}
	 		}
	 		
	 		if ( !sB || !tB ) {
				return f;
			}else{
				return t;
			}
	    }
	 	
	 	
	 	public static void main(String[] args) {
	 		int[] nums = {1,2,-2147483648};
	 		System.out.println(thirdMax(nums));
	 		
	 	}
}

